from torch import Tensor

def gamma(z: Tensor) -> Tensor: ...
def loggamma(z: Tensor) -> Tensor: ...
def digamma(z: Tensor) -> Tensor: ...
def polygamma(n: int, z: Tensor) -> Tensor: ...

def gammainc(a: Tensor, x: Tensor) -> Tensor: ...
def gammaincc(a: Tensor, x: Tensor) -> Tensor: ...
def gammaincinv(a: Tensor, p: Tensor) -> Tensor: ...
def gammainccinv(a: Tensor, q: Tensor) -> Tensor: ...

# def hyp2f1(a: Tensor, b: Tensor, c: Tensor, z: Tensor) -> Tensor: ...
def Tgamma(m: int, a: Tensor, z: Tensor) -> Tensor: ...

def deta1(z: Tensor) -> Tensor: ...
def zeta(z: Tensor) -> Tensor: ...
