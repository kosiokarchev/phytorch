from typing import overload

from torch import Tensor
from ..utils._typing import _TN


def ellipk(m: _TN) -> Tensor: ...
def ellipe(m: _TN) -> Tensor: ...
def ellipd(m: _TN) -> Tensor: ...
def ellippi(n: _TN, m: _TN) -> Tensor: ...

@overload
def ellipkinc(phi: _TN, m: _TN) -> Tensor: ...
@overload
def ellipkinc(_: None, m: _TN, c: _TN) -> Tensor: ...

ellipf = ellipkinc

@overload
def ellipeinc(phi: _TN, m: _TN) -> Tensor: ...
@overload
def ellipeinc(_: None, m: _TN, c: _TN) -> Tensor: ...

@overload
def ellipdinc(phi: _TN, m: _TN) -> Tensor: ...
@overload
def ellipdinc(_: None, m: _TN, c: _TN) -> Tensor: ...

@overload
def ellippiinc(n: _TN, phi: _TN, m: _TN) -> Tensor: ...
@overload
def ellippiinc(n: _TN, _: None, m: _TN, c: _TN) -> Tensor: ...